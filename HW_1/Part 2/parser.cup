/**
 *  Package and Import Specifications
 */
import java_cup.runtime.*;

/**
 *  Usercode Components
 */
parser code {:
    // Connect this parser to a scanner!
    Scanner s;
    Parser(Scanner s){ this.s=s; }
:}

/* define how to connect to the scanner! */
scan with {: return s.next_token(); :};

/**
 *  Symbol Lists
 */

/* Terminals (tokens returned by the scanner). */
terminal            PLUS, LPAREN, RPAREN, LCURLY, RCURLY, COMMA, IF, ELSE, PREFIX, REVERSE, IDENTIFIER;
terminal String     STRING_LITERAL;

/*  Non terminals */
non terminal String program, expr_list, deflist, callist, call, def, func_args, func_body;

/**
 *  Precedence Declarations
 */
precedence left IF;
precedence left PLUS;
precedence left PREFIX;
precedence left REVERSE;

/**
 *  The Grammar Rules
 */

program     ::= expr_list
            ;

expr_list   ::= deflist callist
            ;

callist     ::= call callist
            |   /* empty */
            ;

deflist     ::= def deflist
            |
            ;

def         ::= IDENTIFIER LPAREN func_args RPAREN LCURLY func_body RCURLY
            ;

func_args   ::=
            ;

func_body   ::=
            ;

// expr_list ::= expr_list expr:e SEMI         {: System.out.println(e);         :}
//             | expr:e SEMI                   {: System.out.println(e);         :}
// ;
// expr      ::= expr:e1 PLUS  expr:e2         {: RESULT = e1+e2;                :}
//              | expr:e1 MINUS expr:e2        {: RESULT = e1-e2;                :}
//              | expr:e1 TIMES expr:e2        {: RESULT = e1*e2;                :}
//              | LPAREN expr:e RPAREN	        {: RESULT = e;                    :}
//              | STRING_LITERAL:s	            {: RESULT = Integer.parseInt(s);  :}
//              ;
